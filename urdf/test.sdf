
<?xml version='1.0'?>
<sdf version='1.4'>
<model name="camera">
  
  <link name="base">
    <gravity>0</gravity>
    <pose>0 0 0 0 0 0</pose>
    <collision name="base_collision">
      <geometry>
        <cylinder>
          <radius>.4</radius>
          <length>1.5</length>
        </cylinder>
      </geometry>
    </collision>

    <visual name="base_visual">
      <geometry>
        <cylinder>
          <radius>.4</radius>
          <length>1.5</length>
        </cylinder>
      </geometry>
    </visual>
  </link>
<!-- *********************** DEPTH CAMERA ******************************  -->
<!-- The depth camera (e.g. Intel Realsense camera). -->
<link name="camera_depth_frame">
  <pose>0.12 0 0.65 -1.5708 0 -1.5708</pose>
</link>
 
<link name="camera_link">
  <pose>0.12 0 0.65 0 0 0</pose>
   
  <visual name="camera_visual">
    <pose>-0.005 0 0 0 0 0</pose>
    <geometry>
      <box>
        <size>0.015 0.08 0.022</size>
      </box>
    </geometry>
    <material>
      <ambient>0 0 0 1.0</ambient>
      <diffuse>0 0 0 1.0</diffuse>
      <specular>0.0 0.0 0.0 1.0</specular>
      <emissive>0.0 0.0 0.0 1.0</emissive>
    </material>
  </visual>    
   
  <sensor name="depth_camera" type="camera">
    <always_on>true</always_on>
    <visualize>false</visualize>
    <update_rate>5</update_rate>
    <camera name="camera">
      <horizontal_fov>1.02974</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.02</near>
        <far>10</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.007</stddev>
      </noise>
    </camera>
        _obj=Pose()
        _obj.position.x = 50+i
        _obj.position.y = 50
        _obj.position.z = 0
        spawn_model_client = rospy.ServiceProxy('/gazebo/spawn_sdf_model', SpawnModel)
        spawn_model_client(
        model_name='zylinder'+str(i),
            model_xml=open('/home/matthias/catkin_ws/src/myDrone/urdf/zylinder.sdf', 'r').read(),
            robot_namespace='/zylinder',
            initial_pose=_obj,
            reference_frame='world'
        )
  </sensor>
</link>
</model>  
</sdf>
